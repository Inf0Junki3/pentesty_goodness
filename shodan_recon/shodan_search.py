# Simple shodan network scan, part one: grabs shodan info for an IP range.
# Dumps it as a JSON file.

import ipcalc
import json
import shodan
import sys
import argparse
import os.path

def get_api(keyfile):
    with open(keyfile) as shodan_keyfile:
        shodan_key = shodan_keyfile.read()
    api = shodan.Shodan(shodan_key.strip())
    return api

def search(ip_range, api, redo = False):
    try:
        ip_network = ipcalc.Network(ip_range)
    except Exception:
        return None

    if not redo and os.path.isfile("shodan_results_{}.json".format(str(ip_network).replace("/","_"))):
        print("File exists - shodan_results_{}.json".format(str(ip_network).replace("/","_")))
        return None

    results = {}

    for ip_host in ip_network:
        try:
            host = api.host(str(ip_host))
            results.update({host["ip_str"]: host})
        except Exception:
            results.update({str(ip_host): "No info"})

    with open("shodan_results_{}.json".format(str(ip_network).replace("/","_")), "w") as results_file:
        json.dump(results, results_file)

if __name__ == "__main__":
    parser = argparse.ArgumentParser("Simple shodan network scan, : grabs shodan info for an IP range. ")
    parser.add_argument("--ranges",
                        metavar = "R",
                        nargs = "+")
    parser.add_argument("--keyfile",
                        default = "key.txt")
    args = parser.parse_args()
    api = get_api(args.keyfile)
    for ip_range in args.ranges:
        search(ip_range, api)
