#!/usr/bin/python

# inf0junki3, 2016.
# Sets up a web server for the sole purpose of leaking a client's HTTP headers. This is useful for
# fingerprinting a client, and of course potentially for XSS attacks.

import                      argparse
from BaseHTTPServer import  BaseHTTPRequestHandler
import                      SimpleHTTPServer
import                      SocketServer

PORT = 8000
parser = argparse.ArgumentParser(description = "Leak a web client's HTTP headers.")
parser.add_argument("--port", help="[Optional] Port to serve on. Default: 8000",
                    type = int,
                    default = PORT)


class Handler(BaseHTTPRequestHandler):
    def do_GET(self):
        print "===Request made==="
        print "Path: {}".format(self.path)
        print self.headers
        body = "<html><body>Howdy!</body></html>"
        body_len = len(body)
        self.wfile.write("HTTP/1.1 200 OK\r\n" +
                         "Date: Mon, 27 Jul 2009 12:28:53 GMT\r\n" + 
                         "Server: YourMum/1.1.0 (IsANiceLadyImSure)\r\n" +
                         "Content-Type: text/html\r\n" +
                         "Content-Length: {}\r\n".format(body_len) +
                         "Connection: Closed\r\n\r\n" + 
                         body + "\r\n\r\n")

def serve(port):
    httpd = SocketServer.TCPServer(("", port), Handler)
    print "Serving... Hit Ctrl + c to stop."
    httpd.serve_forever()

if __name__ == "__main__":
    args = parser.parse_args()
    serve(args.port)
